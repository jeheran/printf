/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_printf_conv_handler.c                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jherelle <jherelle@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/02/10 11:42:30 by jherelle          #+#    #+#             */
/*   Updated: 2020/02/11 09:09:08 by jherelle         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ft_printf.h"

int g_debug = 0;

#define F "\t%-30s: "
#define YN(b) ((b) ? "\e[92myes\e[0m" : "\e[96mno\e[0m")

void	ft_printf_conv_handler(t_settings *settings, t_flags *flags, char conv)
{
	int		i;
	int		total_len;
	char	*str;
	char	car;
	void	*ptr;

	i = -1;
	total_len = 0;
	if (conv == 's')
	{
		str = va_arg(settings->parameters, char*);
		ft_printf_conv_s(settings, flags, str, &i);
	}
	else if (conv == 'p')
	{
		void *ptr = va_arg(settings->parameters, void*);
		ft_printf_conv_p(settings, flags, ptr, &i);

		/*void *ptr = va_arg(settings->parameters, void*);
		int *len;

		len = 0;
		if (!(ptr == NULL && flags->precision == 0 && flags->precision_on == 1))
			ft_nbr_len_base(ptr, "0123456789abcdef", &len);
		if (flags->width_on == 1 && flags->padding_left_minus_sign == 0 && flags->pading_character == '0' && flags->precision_on == 0)
		{
			flags->width_on = 0;
			flags->precision_on = 1;
			flags->precision = ft_max(flags->width - 2, flags->precision);
		}
		if (flags->width_on == 1 && flags->padding_left_minus_sign == 0)
		{
			int max = (flags->width - 2 - ft_max(flags->precision, len));
			if (flags->precision_neg)
				max = (flags->width - (int)len - 2) + (flags->precision_on && flags->width_on && flags->precision != 0);
			while (++i < max && (settings->written += 1))
				ft_putchar_fd(' ', FD);
		}
		i = -1;
		ft_putstr_fd("0x", FD);
		settings->written += 2;
		if (flags->precision_on == 1 && flags->precision)
		{
			while (++i < (flags->precision - (int)len))
			{
				ft_putchar_fd('0', FD);
				settings->written += 1;
			}
		}
		if (len != 0)
			ft_putadress_base_fd((unsigned long)ptr, "0123456789abcdef", FD);
		settings->written += (int)len;
		i = -1;
		if (flags->padding_left_minus_sign == 1)
		{
			while (++i < (flags->width - 2 - ft_max(flags->precision, (int)len)))
			{
				ft_putchar_fd(' ', FD);
				settings->written += 1;
			}
		}*/
	}
	else if (conv == 'x' || conv == 'X')
	{
		unsigned int ptr = va_arg(settings->parameters, unsigned int);
		ft_printf_conv_x_X(settings, flags, ptr, &i, conv);
		/*int *len;

		len = 0;
		if (!(ptr == NULL && flags->precision == 0 && flags->precision_on == 1))
			ft_nbr_len_base(ptr, "0123456789abcdef", &len);
		if (flags->width_on == 1 && flags->padding_left_minus_sign == 0 && flags->pading_character == '0' && flags->precision_on == 0)
		{
			flags->width_on = 0;
			flags->precision_on = 1;
			flags->precision = ft_max(flags->width, flags->precision);
		}
		if (flags->width_on == 1 && flags->padding_left_minus_sign == 0)
		{
			int max = (flags->width - ft_max(flags->precision, len));
			if (flags->precision_neg)
				max = (flags->width - (int)len) + (flags->precision_on && flags->width_on && flags->precision != 0);
			while (++i < max && (settings->written += 1))
				ft_putchar_fd(' ', FD);
		}
		i = -1;
		if (flags->precision_on == 1 && flags->precision)
		{
			while (++i < (flags->precision - (int)len))
			{
				ft_putchar_fd('0', FD);
				settings->written += 1;
			}
		}
		if (len != 0)
			ft_putadress_base_fd((unsigned long)ptr, conv == 'x' ? "0123456789abcdef" : "0123456789ABCDEF", FD);
		settings->written += (int)len;
		i = -1;
		if (flags->padding_left_minus_sign == 1)
		{
			while (++i < (flags->width - ft_max(flags->precision, (int)len)))
			{
				ft_putchar_fd(' ', FD);
				settings->written += 1;
			}
		}*/
	}
	else if (conv == 'u')
	{
		unsigned int ptr = va_arg(settings->parameters, unsigned int);
		ft_printf_conv_u(settings, flags, ptr, &i);
		/*int *len;
		len = 0;
		if (!(ptr == NULL && flags->precision == 0 && flags->precision_on == 1))
			ft_nbr_len_base(ptr, "0123456789", &len);

		if (flags->width_on == 1 && flags->padding_left_minus_sign == 0 && flags->pading_character == '0' && flags->precision_on == 0)
		{
			flags->width_on = 0;
			flags->precision_on = 1;
			flags->precision = ft_max(flags->width, flags->precision);
		}
		if (flags->width_on == 1 && flags->padding_left_minus_sign == 0)
		{
			int max = (flags->width - ft_max(flags->precision, len));
			if (flags->precision_neg)
				max = (flags->width - (int)len) + (flags->precision_on && flags->width_on && flags->precision != 0);
			while (++i < max && (settings->written += 1))
				ft_putchar_fd(' ', FD);
		}
		i = -1;
		if (flags->precision_on == 1 && flags->precision)
		{
			while (++i < (flags->precision - (int)len))
			{
				ft_putchar_fd('0', FD);
				settings->written += 1;
			}
		}
		if (len != 0)
			ft_putadress_base_fd((unsigned long)ptr, "0123456789", FD);
		settings->written += (int)len;
		i = -1;
		if (flags->padding_left_minus_sign == 1)
		{
			while (++i < (flags->width - ft_max(flags->precision, (int)len)))
			{
				ft_putchar_fd(' ', FD);
				settings->written += 1;
			}
		}*/
	}
	else if (conv == 'd' || conv == 'i')
	{
		long nbr = 0 + va_arg(settings->parameters, int);
		ft_printf_conv_d_i(settings, flags, nbr, &i);
		/*int neg = nbr < 0;
		nbr = neg ? -nbr : nbr;

		int *len;
		len = 0;
		if (!(nbr == 0 && flags->precision == 0 && flags->precision_on == 1))
			ft_nbr_len_base(nbr, "0123456789", &len);

		if (flags->width_on == 1 && flags->padding_left_minus_sign == 0 && flags->pading_character == '0' && flags->precision_on == 0)
		{
			flags->width_on = 0;
			flags->precision_on = 1;
			flags->precision = ft_max(flags->width - neg, flags->precision);
		}
		if (flags->width_on == 1 && flags->padding_left_minus_sign == 0)
		{
			int max = (flags->width - neg - ft_max(flags->precision, len));
			if (flags->precision_neg)
				max = (flags->width - (int)len - neg) + (flags->precision_on && flags->width_on && flags->precision != 0);
			while (++i < max && (settings->written += 1))
				ft_putchar_fd(' ', FD);
		}
		i = -1;
		if (neg)
			ft_putstr_fd("-", FD);
		settings->written += neg;
		if (flags->precision_on == 1 && flags->precision)
		{
			while (++i < (flags->precision - (int)len))
			{
				ft_putchar_fd('0', FD);
				settings->written += 1;
			}
		}
		if (len != 0)
			ft_putadress_base_fd(nbr, "0123456789", FD);
		settings->written += (int)len;
		i = -1;
		if (flags->padding_left_minus_sign == 1)
		{
			while (++i < (flags->width - neg - ft_max(flags->precision, (int)len)))
			{
				ft_putchar_fd(' ', FD);
				settings->written += 1;
			}
		}*/
	}
	else
	{
		if (conv == 'c')
			car = va_arg(settings->parameters, char);
		else
			car = conv;
		ft_printf_conv_c_else(settings, flags, car, &i);
		/*total_len = 1;
		if (flags->width_on == 1 && flags->width > 1)
			total_len = flags->width;
		settings->written += total_len;
		if (flags->padding_left_minus_sign == 0)
		{
			while (total_len > 1)
			{
				ft_putchar_fd(flags->pading_character, FD);
				total_len--;
			}
		}
		ft_putchar_fd(car, FD);
		if (flags->padding_left_minus_sign == 1)
		{
			while (total_len > 1)
			{
				ft_putchar_fd(flags->pading_character, FD);
				total_len--;
			}
		}*/
	}
}
